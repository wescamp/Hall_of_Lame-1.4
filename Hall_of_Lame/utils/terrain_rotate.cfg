#textdomain wesnoth-Hall_of_Lame

#define CHANGE_TERRAIN A B 
	[rule]
		old={A}
		new=Mm^Xm
		terrain={B}
	[/rule]
#enddef

#define TERRAIN_ROTATE
	[set_variable]
		name=rand_max
		value=$mutable_terrains.length
	[/set_variable]
	[set_variable]
		name=rand_max
		add=-1
	[/set_variable]
	[set_variable]
		name=rand_range
		format="0..$rand_max"
	[/set_variable]
	[set_variable]
		name=random
		rand=$rand_range
	[/set_variable]
	[clear_variable]
		name=rand_max
	[/clear_variable]
	[clear_variable]
		name=rand_range
	[/clear_variable]	
	[set_variable]
		name=xtarget
		to_variable=mutable_terrains[$random].x
	[/set_variable]
	[set_variable]
		name=ytarget
		to_variable=mutable_terrains[$random].y
	[/set_variable]
	[terrain_mask]
		x,y=$xtarget,$ytarget
		mask="usage=mask

		Mm^Xm,_f"

		### terrain translation : 
		# Mm^Xm   -> Ha   (impassable mountains -> snow hills)
		# Ha   -> Aa   (snow hills           -> snow)
		# Aa   -> Ai   (snow                 -> ice)
		# Ai   -> Wwf  (ice                  -> ford)
		# Wwf  -> Ww   (ford                 -> shallow water)
		# Ww   -> Wo   (shallow water        -> deep water)
		# Wo   -> Ss   (deep water           -> swamp)
		# Ss   -> Gs^Ft   (swamp                -> tropical forest)
		# Gs^Ft   -> Gg^Fet  (tropical forest      -> great tree)
		# Gg^Fet  -> Gs^Fp   (great tree           -> forest)
		# Gs^Fp   -> Aa^Fpa   (forest               -> snow forest)
		# Aa^Fpa   -> Re   (snow forest          -> dirt)
	        # Re   -> Re^Gvs (dirt                 -> farmland)
	        # Re^Gvs -> Ggf  (farmland             -> flowers)
		# Ggf  -> Gg   (flowers              -> grass)
		# Gg   -> Gs   (grass                -> savanah)
		# Gs   -> Rd   (savanah              -> desert road)
		# Rd   -> Rr   (desert road          -> road)
		# Rr   -> Ds   (road                 -> sand)
		# Ds   -> Dd   (sand                 -> desert)
		# Dd   -> Dd^Dc   (desert               -> crater)
		# Dd^Dc   -> Hd   (crater               -> desert hills)
		# Hd   -> Hh   (desert hills         -> hills)
		# Hh   -> Mm   (hills                -> mountains)
		# Mm   -> Mm^Xm   (mountains            -> Impassable mountains)

		{CHANGE_TERRAIN Mm^Xm Ha}
		{CHANGE_TERRAIN Ha Aa}
		{CHANGE_TERRAIN Aa Ai}
		{CHANGE_TERRAIN Ai Wwf}
		{CHANGE_TERRAIN Wwf Ww}
		{CHANGE_TERRAIN Ww Wo}
		{CHANGE_TERRAIN Wo Ss}
		{CHANGE_TERRAIN Ss Gs^Ft}
		{CHANGE_TERRAIN Gs^Ft Gg^Fet}
		{CHANGE_TERRAIN Gg^Fet Gs^Fp}
		{CHANGE_TERRAIN Gs^Fp Aa^Fpa}
		{CHANGE_TERRAIN Aa^Fpa Re}
		{CHANGE_TERRAIN Re Re^Gvs}
		{CHANGE_TERRAIN Re^Gvs Ggf}
		{CHANGE_TERRAIN Ggf Gg}
		{CHANGE_TERRAIN Gg Gs}
		{CHANGE_TERRAIN Gs Rd}
		{CHANGE_TERRAIN Rd Rr}
		{CHANGE_TERRAIN Rr Ds}
		{CHANGE_TERRAIN Ds Dd}
		{CHANGE_TERRAIN Dd Dd^Dc}
		{CHANGE_TERRAIN Dd^Dc Hd}
		{CHANGE_TERRAIN Hd Hh}
		{CHANGE_TERRAIN Hh Mm}
		{CHANGE_TERRAIN Mm Mm^Xm}
		[rule]
			use_old=yes
		[/rule]
	[/terrain_mask]	
#enddef

#define STORE_MUTABLE_LOCATIONS XRANGE YRANGE
	[store_locations]
		variable=mutable_terrains
		x={XRANGE}
		y={YRANGE}
		terrain=Mm^Xm,Ha,Aa,Ai,Wwf,Ww,Wo,Ss,Gs^Ft,Gg^Fet,Gs^Fp,Aa^Fpa,Re,Re^Gvs,Ggf,Gg,Gs,Rd,Rr,Ds,Dd,Dd^Dc,Hd,Hh,Mm
	[/store_locations]
#enddef
